datasource db {
    provider = "sqlite"
    url      = "file:../app.db"
}

generator client {
    provider    = "cargo prisma"
    output      = "../src/prisma.rs"
    module_path = "crate::db"
}

model Company {
    id        Int        @id @default(autoincrement())
    name      String
    invoices  Invoice[]
    templates Template[]
    clients   Client[]
    settings  Settings?

    cin   String  @unique // IČO
    vatId String? @unique // DIČ

    // Adress
    address String
    city    String
    zip     String

    // Additional fields
    phone String?
    email String?
}

model Client {
    id         Int    @id @default(autoincrement())
    clientType String @default("BOTH") // ENUM = SUPPLIER, CUSTOMER, BOTH

    name  String
    cin   String  @unique // IČO
    vatId String?

    address String
    city    String
    zip     String

    //Contact info
    email String?
    phone String?

    invoices Invoice[]

    company   Company @relation(fields: [companyId], references: [id])
    companyId Int
}

model Invoice {
    id     Int    @id @default(autoincrement())
    number String @unique

    client     Client @relation(fields: [clientId], references: [id])
    clientId   Int
    templateId String
    currency   String

    issueDate DateTime
    taxDate   DateTime // Datum zdanitelného plnění
    dueDate   DateTime

    status String        @default("DRAFT") // ENUM = DRAFT, PENDING, PAID, CANCELLED, OVERDUE
    items  InvoiceItem[]

    company   Company @relation(fields: [companyId], references: [id])
    companyId Int
}

model Template {
    id Int @id @default(autoincrement())

    name         String
    html         String
    templateType String @default("INVOICE") // ENUM = INVOICE, CREDIT_NOTE todo!

    company   Company @relation(fields: [companyId], references: [id])
    companyId Int
}

model InvoiceItem {
    id        Int     @id @default(autoincrement())
    invoice   Invoice @relation(fields: [invoiceId], references: [id])
    invoiceId Int

    description String
    quantity    Int
    price       Float
    tax         Float
}

model Settings {
    id Int @id @default(autoincrement())

    company   Company @relation(fields: [companyId], references: [id])
    companyId Int     @unique

    currency String
    tax      Float
}
